{"version":3,"sources":["gridfont.min.js"],"names":["Utils","getTransformPrefix","view","document","createElement","prefixes","i","length","prefix","e","style","getTransitionPrefix","t","rand","from","to","Math","floor","random","GridFont","container","text","options","_this","this","scale","cycle","font","textAlign","hJitterMin","hJitterMax","vJitterMin","vJitterMax","rJitterMin","rJitterMax","atIndexes","xform","mergeOptions","imagePath","replace","$","get","data","fontConfig","line_spacing","line_height","character_width","init","console","error","prototype","addClass","css","text-align","createText","caption","words","split","w","wordStr","word","createWord","append","holder","margin-bottom","height","letter","character","createCharacter","profile","getProfile","charWidth","getCharacterContainerWidth","charDimensions","getCharacterDimensions","charHolder","width","addJitter","innerCharacter","innerPosition","getInnerPosition","charCode","charCodeAt","filename","font_name","getCharImage","path","size","margin-left","transform","index","hasOwnProperty","x","y","r","code","types","space","lowercase","lowercase_tall","lowercase_low","uppercase","punctuation_low","punctuation_high","punctuation_tall","punctuation_middle","punctuation_full","key","haystack","indexOf","charHeight","lineHeight","bottom"],"mappings":"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","file":"gridfont.min.js","sourcesContent":["var Utils = (function () {\n    function Utils() {\n    }\n    Utils.getTransformPrefix = function () {\n        var view = document.createElement('div');\n        var prefixes = ['webkit', 'Moz', 'O', 'ms'];\n        for (var i = 0; i < prefixes.length; i++) {\n            var prefix = prefixes[i];\n            var e = prefix + 'Transform';\n            if (typeof view.style[e] !== 'undefined') {\n                view = null;\n                return e;\n            }\n        }\n    };\n    Utils.getTransitionPrefix = function () {\n        var view = document.createElement('div');\n        var prefixes = ['webkit', 'Moz', 'O', 'ms'];\n        for (var i = 0; i < prefixes.length; i++) {\n            var prefix = prefixes[i];\n            var t = prefix + 'Transition';\n            if (typeof view.style[t] !== 'undefined') {\n                view = null;\n                return t;\n            }\n        }\n    };\n    Utils.rand = function (from, to) {\n        return Math.floor(Math.random() * (to - from + 1) + from);\n    };\n    return Utils;\n}());\n\n///<reference path='../def/jquery.d.ts'/>\n///<reference path='./Utils.ts'/>\nvar GridFont = (function () {\n    function GridFont(container, text, options) {\n        var _this = this;\n        //options passed in\n        this.scale = 1;\n        this.cycle = \"random\";\n        this.font = \"\";\n        this.textAlign = \"left\";\n        this.hJitterMin = 0;\n        this.hJitterMax = 0;\n        this.vJitterMin = 0;\n        this.vJitterMax = 0;\n        this.rJitterMin = 0;\n        this.rJitterMax = 0;\n        this.atIndexes = {};\n        this.container = container;\n        this.text = text;\n        this.xform = Utils.getTransformPrefix();\n        this.mergeOptions(options);\n        if (this.font) {\n            this.imagePath = this.font.replace('/data.json', '/img');\n            $.get(this.font, function (data) {\n                _this.fontConfig = data;\n                _this.fontConfig.line_spacing *= _this.scale;\n                _this.fontConfig.line_height *= _this.scale;\n                _this.fontConfig.character_width *= _this.scale;\n                _this.init();\n            });\n        }\n        else {\n            console.error('GridFont: No \"font\" attribute in the options!');\n        }\n    }\n    GridFont.prototype.init = function () {\n        this.container.addClass('gridFont');\n        this.container.css({\n            'text-align': this.textAlign\n        });\n        this.createText();\n    };\n    GridFont.prototype.createText = function () {\n        var caption = this.text;\n        var words = caption.split(' ');\n        for (var w = 0; w < words.length; w++) {\n            var wordStr = words[w];\n            if (w != 0)\n                wordStr = \" \" + wordStr;\n            var word = this.createWord(wordStr);\n            this.container.append(word);\n        }\n    };\n    GridFont.prototype.createWord = function (word) {\n        var holder = $('<div class = \"word\"></div>');\n        holder.css({\n            'margin-bottom': this.fontConfig.line_spacing,\n            'height': this.fontConfig.line_height\n        });\n        for (var i = 0; i < word.length; i++) {\n            var letter = word[i];\n            var character = this.createCharacter(letter);\n            holder.append(character);\n        }\n        return holder;\n    };\n    GridFont.prototype.createCharacter = function (letter) {\n        var profile = this.getProfile(letter);\n        var charWidth = this.getCharacterContainerWidth(profile);\n        var charDimensions = this.getCharacterDimensions(profile);\n        var charHolder = $('<div class = \"characterHolder\"></div>');\n        charHolder.css({\n            'width': charWidth,\n            'height': this.fontConfig.line_height\n        });\n        var character = $('<div class = \"character\"></div>');\n        character.css(charDimensions);\n        this.addJitter(character);\n        var innerCharacter = $('<div class = \"innerCharacter\"></div>');\n        var innerPosition = this.getInnerPosition(profile);\n        if (letter != \" \") {\n            var charCode = letter.charCodeAt(0);\n            var options = this.fontConfig[charCode];\n            if (options) {\n                var filename = this.fontConfig.font_name + '_' + this.getCharImage(charCode, options);\n                var path = this.imagePath + \"/\" + charCode + \"/\" + filename;\n                innerCharacter.css('background-image', 'url(' + path + ')');\n            }\n        }\n        var size = this.fontConfig.character_width * 4 * (1 / this.scale);\n        var s = this.scale * 100;\n        innerCharacter.addClass(innerPosition);\n        innerCharacter.css({\n            'width': size,\n            'height': size,\n            'margin-left': -size / 2,\n            'transform': 'scale(' + this.scale + ', ' + this.scale + ')'\n        });\n        if (innerPosition == \"center\") {\n            innerCharacter.css('margin-top', -size / 2);\n        }\n        character.append(innerCharacter);\n        charHolder.append(character);\n        return charHolder;\n    };\n    GridFont.prototype.getCharImage = function (charCode, options) {\n        var index;\n        if (this.cycle == \"sequential\") {\n            //check to see if this is the first time this char has been used\n            if (this.atIndexes.hasOwnProperty(charCode)) {\n                index = this.atIndexes[charCode];\n                if (!options[index]) {\n                    index = 0;\n                }\n                this.atIndexes[charCode] = index + 1;\n            }\n            else {\n                //this is the first time, use the first one, and set the atIndex to 1\n                index = 0;\n                this.atIndexes[charCode] = 1;\n            }\n        }\n        else {\n            index = Utils.rand(0, options.length - 1);\n        }\n        return options[index];\n    };\n    GridFont.prototype.addJitter = function (character) {\n        var x = 0;\n        var y = 0;\n        var r = 0;\n        //horizontal\n        if (this.hJitterMin != 0 || this.hJitterMax != 0) {\n            x = Utils.rand(this.hJitterMin, this.hJitterMax);\n        }\n        //vertical\n        if (this.vJitterMin != 0 || this.vJitterMax != 0) {\n            y = Utils.rand(this.vJitterMin, this.vJitterMax);\n        }\n        //rotational\n        if (this.rJitterMin != 0 || this.rJitterMax != 0) {\n            r = Utils.rand(this.rJitterMin, this.rJitterMax);\n        }\n        var transform = 'translate3d(' + x + 'px,' + y + 'px, 0px) rotate(' + r + 'deg)';\n        character.css({\n            'transform': transform\n        });\n    };\n    GridFont.prototype.getProfile = function (letter) {\n        var code = letter.charCodeAt(0);\n        var types = {\n            'space': [32],\n            'lowercase': [97, 99, 101, 105, 109, 110, 111, 114, 115, 117, 118, 119, 120, 122],\n            'lowercase_tall': [98, 100, 102, 104, 107, 108, 116],\n            'lowercase_low': [103, 106, 112, 113, 121],\n            'uppercase': [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48],\n            'punctuation_low': [44, 46, 95],\n            'punctuation_high': [94, 96, 39, 34],\n            'punctuation_tall': [33, 123, 125, 124, 91, 93, 40, 41],\n            'punctuation_middle': [60, 62, 61, 42, 43, 59, 58, 126, 45],\n            'punctuation_full': [64, 35, 36, 37, 38, 63, 47]\n        };\n        for (var key in types) {\n            if (types.hasOwnProperty(key)) {\n                var haystack = types[key];\n                if (haystack.indexOf(code) != -1) {\n                    return key;\n                }\n            }\n        }\n        return null;\n    };\n    GridFont.prototype.getCharacterDimensions = function (profile) {\n        var charHeight = this.fontConfig.character_width;\n        var lineHeight = this.fontConfig.line_height;\n        switch (profile) {\n            case \"lowercase\":\n                return {\n                    \"height\": charHeight,\n                    \"bottom\": 0\n                };\n                break;\n            case \"lowercase_tall\":\n                return {\n                    \"height\": lineHeight,\n                    \"bottom\": 0\n                };\n                break;\n            case \"lowercase_low\":\n                return {\n                    \"height\": lineHeight,\n                    \"bottom\": -lineHeight + charHeight\n                };\n                break;\n            case \"uppercase\":\n                return {\n                    \"height\": lineHeight,\n                    \"bottom\": 0\n                };\n                break;\n            case \"punctuation_low\":\n                return {\n                    \"height\": charHeight / 2,\n                    \"bottom\": 0\n                };\n                break;\n            case \"punctuation_tall\":\n                return {\n                    \"height\": lineHeight,\n                    \"bottom\": 0\n                };\n                break;\n            case \"punctuation_full\":\n                return {\n                    \"height\": lineHeight,\n                    \"bottom\": 0\n                };\n                break;\n            default:\n                return {\n                    \"height\": charHeight,\n                    \"bottom\": 0\n                };\n                break;\n        }\n    };\n    GridFont.prototype.getInnerPosition = function (profile) {\n        switch (profile) {\n            case \"lowercase\":\n                return \"up\";\n                break;\n            case \"lowercase_tall\":\n                return \"up\";\n                break;\n            case \"lowercase_low\":\n                return \"down\";\n                break;\n            case \"uppercase\":\n                return \"up\";\n                break;\n            case \"punctuation_low\":\n                return \"center\";\n                break;\n            case \"punctuation_tall\":\n                return \"up\";\n                break;\n            case \"punctuation_full\":\n                return \"up\";\n                break;\n            default:\n                return \"up\";\n                break;\n        }\n    };\n    GridFont.prototype.getCharacterContainerWidth = function (profile) {\n        var w = this.fontConfig.character_width;\n        switch (profile) {\n            case \"lowercase\":\n                return w;\n                break;\n            case \"lowercase_tall\":\n                return w * 0.9;\n                break;\n            case \"lowercase_low\":\n                return w * 0.9;\n                break;\n            case \"uppercase\":\n                return w * 2;\n                break;\n            case \"punctuation_low\":\n                return w * 0.8;\n                break;\n            case \"punctuation_tall\":\n                return w * 0.8;\n                break;\n            case \"punctuation_full\":\n                return w * 1.5;\n                break;\n            default:\n                return w;\n                break;\n        }\n    };\n    GridFont.prototype.mergeOptions = function (options) {\n        for (var key in options) {\n            if (options.hasOwnProperty(key)) {\n                this[key] = options[key];\n            }\n        }\n    };\n    return GridFont;\n}());\n"]}